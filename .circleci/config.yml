version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  azure-cli: circleci/azure-cli@1.2
  docker: circleci/docker@2.2.0

parameters:
  deployment-target:
    type: enum
    default: "aws"
    enum: ["aws", "azure", "digitalocean"]

executors:
  python-docker:
    docker:
      - image: cimg/python:3.8

commands:
  install-dependencies:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - v1-deps-{{ .Branch }}
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
  
  run-tests:
    steps:
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            python -m pytest

jobs:
  lint:
    executor: python-docker
    steps:
      - checkout
      - run:
          name: Install flake8
          command: pip install flake8
      - run:
          name: Run flake8
          command: flake8 .

  security-scan-python:
    executor: python-docker
    steps:
      - checkout
      - run:
          name: Install Bandit
          command: pip install bandit
      - run:
          name: Run Bandit Security Scan
          command: bandit -r TaskManager

  security-scan-docker:
    docker:
      - image: aquasec/trivy:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t taskmanager:${CIRCLE_SHA1} .
      - run:
          name: Run Trivy Scan
          command: trivy image --exit-code 1 --severity HIGH,CRITICAL taskmanager:${CIRCLE_SHA1}

  test:
    executor: python-docker
    steps:
      - install-dependencies
      - run-tests

  deploy-digitalocean:
    executor: python-docker
    steps:
      - checkout
      - docker/build:
          image: taskmanager
          tag: ${CIRCLE_SHA1}
      - run:
          name: Install doctl
          command: |
            cd /tmp
            wget https://github.com/digitalocean/doctl/releases/download/v1.101.0/doctl-1.101.0-linux-amd64.tar.gz
            tar xf doctl-1.101.0-linux-amd64.tar.gz
            sudo mv doctl /usr/local/bin
      - run:
          name: Auth with DigitalOcean
          command: doctl auth init -t $DIGITALOCEAN_ACCESS_TOKEN
      - run:
          name: Push to DigitalOcean Container Registry
          command: |
            doctl registry login
            docker tag taskmanager:${CIRCLE_SHA1} registry.digitalocean.com/$DOCR_NAME/taskmanager:${CIRCLE_SHA1}
            docker push registry.digitalocean.com/$DOCR_NAME/taskmanager:${CIRCLE_SHA1}
      - run:
          name: Trigger App Platform Deployment (placeholder)
          command: |
            echo "TODO: Add doctl apps update <APP_ID> --spec <PATH_TO_SPEC> once App Platform app ID and spec file are available."

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - lint
      - security-scan-python
      - security-scan-docker
      - test:
          requires:
            - lint
            - security-scan-python
            - security-scan-docker
      - deploy-digitalocean:
          requires:
            - test
          filters:
            branches:
              only: main
          when:
            equal: [ digitalocean, << pipeline.parameters.deployment-target >> ]

# NOTE: All secrets must be referenced via environment variables or contexts. Never hardcode secrets in this file or in scripts.
